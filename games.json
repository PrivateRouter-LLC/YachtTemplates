[  
  {
    "type": 1,
    "title": "binhex-minecraftbedrockserver",
    "description": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftbedrockserver-icon.png",
    "name": "binhex-minecraftbedrockserver",
    "image": "binhex/arch-minecraftbedrockserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp",
        "19133": "19133:19133/tcp",
        "8222": "8222:8222/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "ENABLE_WEBUI_CONSOLE",
        "label": "ENABLE_WEBUI_CONSOLE",
        "default": "yes"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": ""
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "admin"
      },
      {
        "name": "WEBUI_CONSOLE_TITLE",
        "label": "WEBUI_CONSOLE_TITLE",
        "default": "Minecraft Bedrock"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CREATE_BACKUP_HOURS",
        "label": "CREATE_BACKUP_HOURS",
        "default": "12"
      },
      {
        "name": "PURGE_BACKUP_DAYS",
        "label": "PURGE_BACKUP_DAYS",
        "default": "14"
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-minecraftserver",
    "description": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Minecraft is a sandbox video game created by Swedish game developer Markus Persson and released by Mojang in 2011. The game allows players to build with a variety of different blocks in a 3D procedurally generated world, requiring creativity from players. Other activities in the game include exploration, resource gathering, crafting, and combat. Multiple game modes that change gameplay are available, including—but not limited to—a survival mode, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources to build with.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/minecraftserver-icon.png",
    "name": "binhex-minecraftserver",
    "image": "binhex/arch-minecraftserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8222": "8222:8222/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "WEBUI_CONSOLE_TITLE",
        "label": "WEBUI_CONSOLE_TITLE",
        "default": "Minecraft Java"
      },
      {
        "name": "JAVA_MAX_HEAP_SIZE",
        "label": "JAVA_MAX_HEAP_SIZE",
        "default": "1024M"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "CREATE_BACKUP_HOURS",
        "label": "CREATE_BACKUP_HOURS",
        "default": "12"
      },
      {
        "name": "WEBUI_PASS",
        "label": "WEBUI_PASS",
        "default": ""
      },
      {
        "name": "ENABLE_WEBUI_AUTH",
        "label": "ENABLE_WEBUI_AUTH",
        "default": "yes"
      },
      {
        "name": "WEBUI_USER",
        "label": "WEBUI_USER",
        "default": "admin"
      },
      {
        "name": "JAVA_INITIAL_HEAP_SIZE",
        "label": "JAVA_INITIAL_HEAP_SIZE",
        "default": "512M"
      },
      {
        "name": "JAVA_MAX_THREADS",
        "label": "JAVA_MAX_THREADS",
        "default": "1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PURGE_BACKUP_DAYS",
        "label": "PURGE_BACKUP_DAYS",
        "default": "14"
      },
      {
        "name": "ENABLE_WEBUI_CONSOLE",
        "label": "ENABLE_WEBUI_CONSOLE",
        "default": "yes"
      }
    ]
  },
  {
    "type": 1,
    "title": "binhex-mineos-node",
    "description": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\n\n    This allows the front-end to provide system health, disk and memory usage, and logging in real-time.\n\n    The front-end also allows you to create and manage a multitude of Java based servers, including Mojang Java, Spigot, Nukkit, Forge and many other popular Minecraft server types. You can create archives and restore points of your world's straight from the web ui, meaning loss of important game data is minimised.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\n\n    This allows the front-end to provide system health, disk and memory usage, and logging in real-time.\n\n    The front-end also allows you to create and manage a multitude of Java based servers, including Mojang Java, Spigot, Nukkit, Forge and many other popular Minecraft server types. You can create archives and restore points of your world's straight from the web ui, meaning loss of important game data is minimised.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/mineos-node-icon.png",
    "name": "binhex-mineos-node",
    "image": "binhex/arch-mineos-node",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "WEBUI_PASSWORD",
        "label": "WEBUI_PASSWORD",
        "default": "mineos"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "0"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "0"
      }
    ]
  },  
  {
    "type": 1,
    "title": "binhex-phantom",
    "description": "Makes hosted Bedrock/MCPE servers show up as LAN servers, specifically for consoles. You can now play on remote servers (not Realms!) on your Xbox and PS4 with friends. It's like having a LAN server that's not actually there, spooky.",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Makes hosted Bedrock/MCPE servers show up as LAN servers, specifically for consoles. You can now play on remote servers (not Realms!) on your Xbox and PS4 with friends. It's like having a LAN server that's not actually there, spooky.",
    "logo": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/phantom-icon.png",
    "name": "binhex-phantom",
    "image": "binhex/arch-phantom",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp",
        "19133": "19133:19133/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/cache/appdata/config"
      }
    ],
    "env": [
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      },
      {
        "name": "REMOTE_MINECRAFT_IP",
        "label": "REMOTE_MINECRAFT_IP",
        "default": ""
      },
      {
        "name": "REMOTE_MINECRAFT_PORT",
        "label": "REMOTE_MINECRAFT_PORT",
        "default": "19132"
      },
      {
        "name": "CLEANUP_TIMEOUT",
        "label": "CLEANUP_TIMEOUT",
        "default": "60"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      }
    ]
  }, 
  {
    "type": 1,
    "title": "MineOS",
    "description": "MineOS is an easy to manage Minecraft Server. It has its on web interface to manage all aspects of the server.",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "MineOS is an easy to manage Minecraft Server. It has its on web interface to manage all aspects of the server.",
    "logo": "https://i.imgur.com/P6RRtHH.png",
    "name": "MineOS",
    "image": "yujiod/minecraft-mineos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/games/minecraft",
        "bind": "/mnt/appdata/minecraftos/"
      }
    ],
    "env": [
      {
        "name": "PASSWORD",
        "label": "PASSWORD",
        "default": "minecraft"
      }
    ]
  },  
  {
    "type": 1,
    "title": "mcmyadmin2",
    "description": "This is a mcmyadmin container. Default password for webinterface is \\\"password\\\"",
    "categories": [
      "Network:Other",
      "Other:"
    ],
    "platform": "linux",
    "note": "This is a mcmyadmin container. Default password for webinterface is \\\"password\\\"",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mcmyadmin-icon.png",
    "name": "mcmyadmin2",
    "image": "linuxserver/mcmyadmin2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/minecraft",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },  
  {
    "type": 1,
    "title": "minetest",
    "description": "Server version of minetest, a free, open source alternative to minecraft.",
    "categories": [
      "Network:Other",
      "Other:",
      "GameServers:"
    ],
    "platform": "linux",
    "note": "Server version of minetest, a free, open source alternative to minecraft.",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
    "name": "minetest",
    "image": "linuxserver/minetest:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "30000": "30000:30000/udp"
      }
    ],
    "volumes": [
      {
        "container": "/config/.minetest",
        "bind": ""
      }
    ],
    "env": [
      {
        "name": "CLI_ARGS",
        "label": "CLI_ARGS",
        "default": ""
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  }, 
  {
    "type": 1,
    "title": "PS3netsrv-Alpine",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Alpine",
    "image": "mccloud/ps3netsrv:alpine",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Debian",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Debian",
    "image": "mccloud/ps3netsrv:debian",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Phusion",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Phusion",
    "image": "mccloud/ps3netsrv:phusion",
    "restart_policy": "unless-stopped"
  },
  {
    "type": 1,
    "title": "PS3netsrv-Ubuntu",
    "categories": [
      "Network:Other",
      "MediaApp:Other",
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "PS3netsrv allows you to play your backups through the network from your unRAID server.",
    "logo": "https://raw.githubusercontent.com/dexn/docker-templates/master/dexn/images/ps3netsrvicon.png",
    "name": "PS3netsrv-Ubuntu",
    "image": "mccloud/ps3netsrv:ubuntu",
    "restart_policy": "unless-stopped"
  },  
  {
    "type": 1,
    "title": "Starbound-GOG-Server",
    "description": "Docker container to run a GOG Starbound Server.",
    "categories": [
      "Other:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "Docker container to run a GOG Starbound Server.",
    "logo": "https://raw.githubusercontent.com/miketweaver/docker-starbound-server/master/starbound.png",
    "name": "Starbound-GOG-Server",
    "image": "bashninja/docker-gog-starbound-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21025": "21025:21025/tcp",
        "21026": "21026:21026/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/starbound",
        "bind": ""
      }
    ]
  },  
  {
    "type": 1,
    "title": "mineos-node",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\n\r\nDEFAULT USER: mc\r\nDEFAULT PASSWORD: mypass",
    "logo": "https://i.imgur.com/P6RRtHH.png",
    "name": "mineos-node",
    "image": "hexparrot/mineos:latest",
    "restart_policy": "unless-stopped"
  },  
  {
    "type": 1,
    "title": "GenericCache",
    "description": "This docker container provides a caching proxy server for game download content. For any network with more than one PC gamer connected, this will drastically reduce internet bandwidth consumption.\n\tThis container is designed to support any game that uses HTTP and also supports HTTP range requests (used by Origin). This should make it suitable for:\n\tSteam (Valve)\n\tOrigin (EA Games)\n\tRiot Games (League of Legends)\n\tBattle.net (Hearthstone, Starcraft 2, Overwatch)\n\tFrontier Launchpad (Elite Dangerous, Planet Coaster)\n\tUplay (Ubisoft)\n\tWindows Updates\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!\n\tThis container should be used in conjunction with SteamcacheDNS and SNIProxy.",
    "categories": [
      "Backup:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "This docker container provides a caching proxy server for game download content. For any network with more than one PC gamer connected, this will drastically reduce internet bandwidth consumption.\n\tThis container is designed to support any game that uses HTTP and also supports HTTP range requests (used by Origin). This should make it suitable for:\n\tSteam (Valve)\n\tOrigin (EA Games)\n\tRiot Games (League of Legends)\n\tBattle.net (Hearthstone, Starcraft 2, Overwatch)\n\tFrontier Launchpad (Elite Dangerous, Planet Coaster)\n\tUplay (Ubisoft)\n\tWindows Updates\n\tPlease see https://squishedmooo.com/?p=1 for install instructions! You will need them!\n\tThis container should be used in conjunction with SteamcacheDNS and SNIProxy.",
    "logo": "https://raw.githubusercontent.com/cheesemarathon/docker-templates/master/images/steamcache.png",
    "name": "GenericCache",
    "image": "steamcache/generic:latest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "80": "80:80/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data/cache",
        "bind": "/mnt/user/appdata/gen-cache/data"
      },
      {
        "container": "/data/logs",
        "bind": "/mnt/user/appdata/gen-cache/logs"
      }
    ],
    "env": [
      {
        "name": "CACHE_MEM_SIZE",
        "label": "CACHE_MEM_SIZE",
        "default": "500m"
      },
      {
        "name": "CACHE_DISK_SIZE",
        "label": "CACHE_DISK_SIZE",
        "default": "500g"
      },
      {
        "name": "CACHE_MAX_AGE",
        "label": "CACHE_MAX_AGE",
        "default": "3650d"
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftPE",
    "description": "Nukkit is a Nuclear-Powered Server Software For Minecraft Pocket Edition\n\nVERY IMPORTANT:\n First run use Screen on Uraid\n docker exec -ti MinecraftPE /bin/bash\n \n Run command :\n java -jar /nukkit-1.0-SNAPSHOT.jar\n select language\n \n after the first run everything should work fine\n\n To Interact with Server / adminstration,\n use \"docker attach MinecraftPE\" at command promt\n Press ctrl-p-ctrl-q to exit without shutting down the server",
    "categories": [
      "MediaServer:Other"
    ],
    "platform": "linux",
    "note": "Nukkit is a Nuclear-Powered Server Software For Minecraft Pocket Edition\n\nVERY IMPORTANT:\n First run use Screen on Uraid\n docker exec -ti MinecraftPE /bin/bash\n \n Run command :\n java -jar /nukkit-1.0-SNAPSHOT.jar\n select language\n \n after the first run everything should work fine\n\n To Interact with Server / adminstration,\n use \"docker attach MinecraftPE\" at command promt\n Press ctrl-p-ctrl-q to exit without shutting down the server",
    "logo": "https://i.imgur.com/zn0eOhH.png",
    "name": "MinecraftPE",
    "image": "ixilon/nukkit",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/udp"
      }
    ],
    "volumes": [
      {
        "container": "/srv/nukkit/",
        "bind": "/mnt/user/appdata/minecraftpe"
      }
    ],
    "env": [
      {
        "name": "LANGUAGE",
        "label": "LANGUAGE",
        "default": "en_US.UTF-8"
      },
      {
        "name": "LC_ALL",
        "label": "LC_ALL",
        "default": "en_US.UTF-8"
      },
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/Denver"
      }
    ]
  },
  {
    "type": 1,
    "title": "MineOS-node",
    "description": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\nDefault Username: mc\r\nDefault password: mypass\r\nPlease change your password\r\n\r\nDefault configuration:\r\nWeb Port:  8443\r\nDynmap Port: 8125\r\nMinecraft Ports (10 by default): 25565-25575\r\nContainer Path: /var/games/minecraft\r\nStorage Path (optional for faster server back-ups if using plugins like dynmap):  /mnt/data\r\n\r\nUbuntu, latest commit By Hexparrot",
    "categories": [
      "Other:Uncategorized"
    ],
    "platform": "linux",
    "note": "MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.\r\n\r\nThis allows the front-end to provide system health, disk and memory usage, and logging in real-time.\r\n\r\nDefault Username: mc\r\nDefault password: mypass\r\nPlease change your password\r\n\r\nDefault configuration:\r\nWeb Port:  8443\r\nDynmap Port: 8125\r\nMinecraft Ports (10 by default): 25565-25575\r\nContainer Path: /var/games/minecraft\r\nStorage Path (optional for faster server back-ups if using plugins like dynmap):  /mnt/data\r\n\r\nUbuntu, latest commit By Hexparrot",
    "logo": "https://vignette2.wikia.nocookie.net/lotr-minecraft-mod-exiles/images/f/f2/Minecraft_server_setup.png/revision/latest?cb=20160911172557",
    "name": "MineOS-node",
    "image": "hexparrot/mineos",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "25565": "25565:25565/udp",
        "8443": "8443:8443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/games/minecraft",
        "bind": "/mnt/cache/appdata/minecraft/"
      },
      {
        "container": "/mnt/data",
        "bind": "/mnt/cache/minecraft"
      }
    ],
    "env": [
      {
        "name": "USER_PASSWORD",
        "label": "USER_PASSWORD",
        "default": "mypass"
      }
    ]
  }, 
  {
    "type": 1,
    "title": "FoundryVTT",
    "description": "FoundryVTT is a web based Dungeons and Dragons application that allows users to play with others over the internet.  You will have to purchase a copy of foundryvtt from https://foundryvtt.com",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "FoundryVTT is a web based Dungeons and Dragons application that allows users to play with others over the internet.  You will have to purchase a copy of foundryvtt from https://foundryvtt.com",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/d20.png",
    "name": "FoundryVTT",
    "image": "fithwum/foundry_vtt",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "30000": "30000:30000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/foundry/data",
        "bind": ""
      },
      {
        "container": "/foundry/fvtt",
        "bind": "/mnt/user/appdata/FoundryVTT"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Minecraft",
    "description": "This docker is for running Minecraft vanilla server version 1.16.1 but if you want to run a modded server you can just do not delete the files that are in the folder.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This docker is for running Minecraft vanilla server version 1.16.1 but if you want to run a modded server you can just do not delete the files that are in the folder.",
    "logo": "https://raw.githubusercontent.com/fithwum/files-for-dockers/master/icons/Minecraft.png",
    "name": "Minecraft",
    "image": "fithwum/minecraft",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "25565": "25565:25565/udp"
      }
    ],
    "volumes": [
      {
        "container": "/MCserver/world/",
        "bind": "/mnt/user/Game_Saves/Minecraft/world/"
      },
      {
        "container": "/MCserver",
        "bind": "/mnt/user/appdata/minecraft-server"
      }
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "label": "ACCEPT_EULA",
        "default": "false"
      },
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },  
  {
    "type": 1,
    "title": "7DaysToDie",
    "description": "This Docker will download and install SteamCMD. It will also install 7 Days to Die and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install 7 Days to Die and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/7dtd.png",
    "name": "7DaysToDie",
    "image": "ich777/steamcmd:7dtd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "26900": "26900:26900/tcp",
        "26901": "26901:26901/udp",
        "26902": "26902:26902/udp",
        "26903": "26903:26903/udp",
        "27015": "27015:27015/udp",
        "8080": "8080:8080/tcp",
        "8082": "8082:8082/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/7dtd"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "SERVERCONFIG",
        "label": "SERVERCONFIG",
        "default": "serverconfig.xml"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-logfile 7DaysToDie_Data/output_log.txt $@"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "294420"
      }
    ]
  },
  {
    "type": 1,
    "title": "AlienSwarm",
    "description": "This Docker will download and install SteamCMD. It will also install Alien Swarm and run it.\r\n\r\n(!!!This container will only run on systems with less than 32 CPU cores!!!)\r\n\r\nInstall Note: You must provide a valid Steam username and password with Steam Guard disabled (the user dosen't have to have the game in the library).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Alien Swarm and run it.\r\n\r\n(!!!This container will only run on systems with less than 32 CPU cores!!!)\r\n\r\nInstall Note: You must provide a valid Steam username and password with Steam Guard disabled (the user dosen't have to have the game in the library).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarm.png",
    "name": "AlienSwarm",
    "image": "ich777/steamcmd:alienswarm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/alienswarm"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map lobby -maxplayers 4 +exec server.cfg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "635"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "swarm"
      }
    ]
  },
  {
    "type": 1,
    "title": "AlienSwarm-ReactiveDrop",
    "description": "This Docker will download and install SteamCMD. It will also install Alien Swarm: Reactive Drop and run it. (!!!This container will only run on systems with less than 32 CPU cores!!!) \r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Alien Swarm: Reactive Drop and run it. (!!!This container will only run on systems with less than 32 CPU cores!!!) \r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/alienswarmreactivedrop.png",
    "name": "AlienSwarm-ReactiveDrop",
    "image": "ich777/steamcmd:alienswarmreactivedrop",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/alienswarm-reactivedrop"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map lobby -maxplayers 4 +exec server.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "563560"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "reactivedrop"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Altitude",
    "description": "This Docker will download and install Altitude and run it.\r\n\r\nDefault Servername: Docker Altitude Server | Default Password: Docker | Default Admin Password: adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Altitude and run it.\r\n\r\nDefault Servername: Docker Altitude Server | Default Password: Docker | Default Admin Password: adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/altitude.png",
    "name": "Altitude",
    "image": "ich777/altitude",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27276": "27276:27276/udp"
      }
    ],
    "volumes": [
      {
        "container": "/altitude",
        "bind": "/mnt/cache/appdata/altitude"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "http://installer.altitudegame.com/0.0.1/altitude.sh"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },  
  {
    "type": 1,
    "title": "ARKSurvivalEvolved",
    "description": "This Docker will download and install SteamCMD. It will also install ARK:SurvivalEvolved and run it (Normal server startup of ARK can take a long time!).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ARK:SurvivalEvolved and run it (Normal server startup of ARK can take a long time!).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arkse.png",
    "name": "ARKSurvivalEvolved",
    "image": "ich777/steamcmd:arkse",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27020": "27020:27020/tcp",
        "7777": "7777:7777/udp",
        "7778": "7778:7778/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/ark-se"
      }
    ],
    "env": [
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "MAP",
        "label": "MAP",
        "default": "TheIsland"
      },
      {
        "name": "SRV_PWD",
        "label": "SRV_PWD",
        "default": ""
      },
      {
        "name": "SRV_ADMIN_PWD",
        "label": "SRV_ADMIN_PWD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS_EXTRA",
        "label": "GAME_PARAMS_EXTRA",
        "default": "-server -log"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "376030"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ArmA3ExileMod",
    "description": "This Docker will download and install SteamCMD. It will also install ArmA III including ExileMod 1.0.4 and run it (You can also change the download URL so that you can install older builds of ExileMod).\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ArmA III including ExileMod 1.0.4 and run it (You can also change the download URL so that you can install older builds of ExileMod).\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/arma3exilemod.png",
    "name": "ArmA3ExileMod",
    "image": "ich777/steamcmd:arma3exilemod",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2302": "2302:2302/tcp",
        "2303": "2303:2303/udp",
        "2304": "2304:2304/udp",
        "2305": "2305:2305/udp",
        "2306": "2306:2306/udp",
        "3306": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/arma3exilemod/gamefiles"
      },
      {
        "container": "/serverdata/.local/share",
        "bind": "/mnt/cache/appdata/arma3exilemod/profiles"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "WORKSHOP_MAN_INST",
        "label": "WORKSHOP_MAN_INST",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "EXILEMOD_SERVER_URL",
        "label": "EXILEMOD_SERVER_URL",
        "default": "http://www.exilemod.com/ExileServer-1.0.4a.zip"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "233780"
      },
      {
        "name": "MARIA_DB_ROOT_PWD",
        "label": "MARIA_DB_ROOT_PWD",
        "default": "ExileMod"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "2302"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ArmA3",
    "description": "This Docker will download and install SteamCMD. It will also install ArmA III and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nPassword Notice: The Docker will automaticly download a server.cfg preconfigured with ServerName: Docker Server and Password: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ArmA III and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nPassword Notice: The Docker will automaticly download a server.cfg preconfigured with ServerName: Docker Server and Password: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/armaiii.png",
    "name": "ArmA3",
    "image": "ich777/steamcmd:arma3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "2302": "2302:2302/tcp",
        "2303": "2303:2303/udp",
        "2304": "2304:2304/udp",
        "2305": "2305:2305/udp",
        "2306": "2306:2306/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/.local/share",
        "bind": "/mnt/cache/appdata/arma3/profiles"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/arma3/gamefiles"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "233780"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config=server.cfg -mod="
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "2302"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "AssettoCorsa",
    "description": "This Docker will download and install SteamCMD. It will also install AssettoCorsa and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: You MUST provide a Steam User account with SteFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install AssettoCorsa and run it.\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens  to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: You MUST provide a Steam User account with SteFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/assettocorsa.png",
    "name": "AssettoCorsa",
    "image": "ich777/steamcmd:assettocorsa",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "50041": "50041:50041/tcp",
        "8081": "8081:8081/tcp",
        "8772": "8772:8772/tcp",
        "9600": "9600:9600/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/assettocorsa"
      }
    ],
    "env": [
      {
        "name": "INSTALL_ASSETTO_SERVER_MANAGER",
        "label": "INSTALL_ASSETTO_SERVER_MANAGER",
        "default": "true"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "302550"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "INSTALL_STRACKER",
        "label": "INSTALL_STRACKER",
        "default": ""
      }
    ]
  },  
  {
    "type": 1,
    "title": "ATLAS",
    "description": "This Docker will download and install SteamCMD. It will also install ATLAS and run it (this docker does also have a built in Redis server for quick server setup, you also can disable it in the variables below).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ATLAS and run it (this docker does also have a built in Redis server for quick server setup, you also can disable it in the variables below).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/atlas.png",
    "name": "ATLAS",
    "image": "ich777/steamcmd:atlas",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27000": "27000:27000/tcp",
        "32330": "32330:32330/tcp",
        "5750": "5750:5750/udp",
        "5751": "5751:5751/udp",
        "57550": "57550:57550/udp",
        "6379": "6379:6379/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/cache/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/atlas"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "?ServerX=0?ServerY=0?AltSaveDirectoryName=00?MaxPlayers=50?ReservedPlayerSlots=10?QueryPort=57550?Port=5750"
      },
      {
        "name": "ENA_REDIS",
        "label": "ENA_REDIS",
        "default": "yes"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1006030"
      },
      {
        "name": "MAP_NAME",
        "label": "MAP_NAME",
        "default": "Ocean"
      },
      {
        "name": "GAME_PARAMS_EXTRA",
        "label": "GAME_PARAMS_EXTRA",
        "default": "-log -server -NoBattlEye"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Avorion",
    "description": "This Docker will download and install SteamCMD. It will also install Avorion and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Avorion and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/avorion.png",
    "name": "Avorion",
    "image": "ich777/steamcmd:avorion",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27000": "27000:27000/tcp",
        "27003": "27003:27003/udp",
        "27020": "27020:27020/udp",
        "27021": "27021:27021/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/avorion"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "565060"
      },
      {
        "name": "GALAXY_NAME",
        "label": "GALAXY_NAME",
        "default": "AvorionDocker"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Barotrauma",
    "description": "This Docker will download and install SteamCMD. It will also install Barotrauma and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console from Unraid itself and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS Barotrauma' (without quotes), to disconnect from the console simply close the window.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Barotrauma and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console from Unraid itself and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS Barotrauma' (without quotes), to disconnect from the console simply close the window.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/barotrauma.png",
    "name": "Barotrauma",
    "image": "ich777/steamcmd:barotrauma",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27016": "27016:27016/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/barotrauma"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1026340"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },  
  {
    "type": 1,
    "title": "Citadel-ForgedWithFire",
    "description": "This Docker will download and install SteamCMD. It will also install Citadel - Forged with Fire and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Citadel - Forged with Fire and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/citadelfwf.png",
    "name": "Citadel-ForgedWithFire",
    "image": "ich777/steamcmd:citadelfwf",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/citadelfwf"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "489650 "
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ColonySurvival",
    "description": "This Docker will download and install SteamCMD. It will also install Colony Survival and run it.\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS ColonySurvival' (without quotes),\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Colony Survival and run it.\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS ColonySurvival' (without quotes),\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/colonysurvival.png",
    "name": "ColonySurvival",
    "image": "ich777/steamcmd:colonysurvival",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27016": "27016:27016/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/colonysurvival"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "SRV_WORLDNAME",
        "label": "SRV_WORLDNAME",
        "default": "ColonySurvival"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "748090"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+server.gameport 27016"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Colony Survival Docker"
      },
      {
        "name": "SRV_NETTYPE",
        "label": "SRV_NETTYPE",
        "default": "SteamOnline"
      }
    ]
  },
  {
    "type": 1,
    "title": "ConanExiles",
    "description": "This Docker will download and install SteamCMD. It will also install Conan Exiles and run it.\r\n\r\nServername: 'Docker ConanExiles' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Conan Exiles and run it.\r\n\r\nServername: 'Docker ConanExiles' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/conanexiles.png",
    "name": "ConanExiles",
    "image": "ich777/steamcmd:conanexiles",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/tcp",
        "7778": "7778:7778/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/conanexiles/"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "WS_CONTENT",
        "label": "WS_CONTENT",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "443030"
      }
    ]
  },
  {
    "type": 1,
    "title": "CounterStrike2D",
    "description": "This Docker will download and install CounterStrike 2D.\r\nCounterStrike 2D is a free to play top down shooter (you can get it on Steam or at https://www.cs2d.com/)",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install CounterStrike 2D.\r\nCounterStrike 2D is a free to play top down shooter (you can get it on Steam or at https://www.cs2d.com/)",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs2d.png",
    "name": "CounterStrike2D",
    "image": "ich777/cs2dserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "36963": "36963:36963/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cs2d"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "CSGO",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike: GO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\nPUBLIC PLAY: If you want that your server is public listed you must add '+sv_setsteamaccount YOURTOKEN' to the GAME_PARAMS (without the quotes and replace YOURTOKEN with your token).\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (every gameserver needs it's own token!!!)\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike: GO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\nPUBLIC PLAY: If you want that your server is public listed you must add '+sv_setsteamaccount YOURTOKEN' to the GAME_PARAMS (without the quotes and replace YOURTOKEN with your token).\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (every gameserver needs it's own token!!!)\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/csgo.png",
    "name": "CSGO",
    "image": "ich777/steamcmd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikego"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+game_type 0 -usercon +game_mode 0 +mapgroup mg_active +map de_dust2"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "740"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "csgo"
      }
    ]
  }, 
  {
    "type": 1,
    "title": "CSSource",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/css.png",
    "name": "CSSource",
    "image": "ich777/steamcmd",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikesource"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "cstrike"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map de_dust2"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232330"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "CStrike1.6",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike 1.6 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike 1.6 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cs1.6.png",
    "name": "CStrike1.6",
    "image": "ich777/steamcmd:cstrike1.6",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrike1.6"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "cstrike"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 32 +map de_dust"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "CStrikeConditionZero",
    "description": "This Docker will download and install SteamCMD. It will also install Counter-Strike Condition Zero and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Counter-Strike Condition Zero and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/cstrikeczero.png",
    "name": "CStrikeConditionZero",
    "image": "ich777/steamcmd:cstrikeczero",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/cstrikeczero"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "czero"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map as_oilrig"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dmc'"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod czero"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Dawn-of-Light-Server",
    "description": "This Docker will download and install Dawn of Light Server and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u dol -ti NAMEOFYOURCONTAINER screen -xS DoL' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Dawn of Light Server and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u dol -ti NAMEOFYOURCONTAINER screen -xS DoL' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/DoL.png",
    "name": "Dawn-of-Light-Server",
    "image": "ich777/dawn-of-light-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10300": "10300:10300/tcp",
        "10400": "10400:10400/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/dol",
        "bind": "/mnt/cache/appdata/dawn-of-light"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfDefeat-Classic",
    "description": "This Docker will download and install SteamCMD. It will also install Day of Defeat Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day of Defeat Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dodclassic.png",
    "name": "DayOfDefeat-Classic",
    "image": "ich777/steamcmd:dodclassic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dodclassic"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dod'"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dod"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map dod_avalanche +maxplayer 24"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod dod"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfDefeatSource",
    "description": "This Docker will download and install SteamCMD. It will also install Day of Defeat: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day of Defeat: Source and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dods.png",
    "name": "DayOfDefeatSource",
    "image": "ich777/steamcmd:dods",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dods"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232290"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dod"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 24 +map dod_kalt"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "DayOfInfamy",
    "description": "This Docker will download and install SteamCMD. It will also install Day Of Infamy and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Day Of Infamy and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dayofinfamy.png",
    "name": "DayOfInfamy",
    "image": "ich777/steamcmd:dayofinfamy",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dayofinfamy"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "462310"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map sicily +mp_gamemode frontline"
      }
    ]
  },
  {
    "type": 1,
    "title": "DaysOfWar",
    "description": "This Docker will download and install SteamCMD. It will also install Days of War and run it.\r\n\r\nServername: 'Docker Days-of-War' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Days of War and run it.\r\n\r\nServername: 'Docker Days-of-War' Password: 'Docker' rconPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/daysofwar.png",
    "name": "DaysOfWar",
    "image": "ich777/steamcmd:daysofwar",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/daysofwar/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "541790"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "dow_cathedral"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "7777"
      }
    ]
  }, 
  {
    "type": 1,
    "title": "DMClassic",
    "description": "This Docker will download and install SteamCMD. It will also install Deatmatch Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Deatmatch Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dmclassic.png",
    "name": "DMClassic",
    "image": "ich777/steamcmd:dmclassic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dmclassic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "dmc"
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod dmc"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod dmc'"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map dmc_dm3.bsp"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },  
  {
    "type": 1,
    "title": "DontStarveTogether",
    "description": "This Docker will download and install SteamCMD. It will also install Don't Starve Together and run it.\r\n\r\nATTENTION: After the first complete startup (you can see it in the log) copy your 'cluster_token.txt' in the 'token/Cluster_1' folder and restart the container.\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Don't Starve Together and run it.\r\n\r\nATTENTION: After the first complete startup (you can see it in the log) copy your 'cluster_token.txt' in the 'token/Cluster_1' folder and restart the container.\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/dontstarve.png",
    "name": "DontStarveTogether",
    "image": "ich777/steamcmd:dontstarve",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10890": "10890:10890/udp",
        "27016": "27016:27016/udp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/.klei/DoNotStarveTogether",
        "bind": "/mnt/cache/appdata/dontstarve/token"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/dontstarve/serverfiles"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "CAVES",
        "label": "CAVES",
        "default": "true"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "343050"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "ECO",
    "description": "This Docker will download and install SteamCMD. It will also install ECO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker'.\r\n\r\nECO Management Window: You can connect to the ECO Management Window by going to: 'http://YOURSERVERIP:8080/vnc_auto.html' (without quotes - note that you must enable set 'Server Management' to 'true')\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install ECO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker'.\r\n\r\nECO Management Window: You can connect to the ECO Management Window by going to: 'http://YOURSERVERIP:8080/vnc_auto.html' (without quotes - note that you must enable set 'Server Management' to 'true')\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/eco.png",
    "name": "ECO",
    "image": "ich777/steamcmd:eco",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3000": "3000:3000/udp",
        "3001": "3001:3001/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/eco"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "739590"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      }
    ]
  },  
  {
    "type": 1,
    "title": "Factorio",
    "description": "This Docker Container will download the latest stable release of the game, generate the map and you're ready to play.\r\n\r\nIf you want to play the latest beta release of the game change the repository to \"factoriotools/factorio:latest\" in Advanced View.\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\n\r\nThe Docker Container is originaly created by dtandersen and now moved to factoriotools.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker Container will download the latest stable release of the game, generate the map and you're ready to play.\r\n\r\nIf you want to play the latest beta release of the game change the repository to \"factoriotools/factorio:latest\" in Advanced View.\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\n\r\nThe Docker Container is originaly created by dtandersen and now moved to factoriotools.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/factorio.png",
    "name": "Factorio",
    "image": "factoriotools/factorio:stable",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "34197": "34197:34197/udp"
      }
    ],
    "volumes": [
      {
        "container": "/factorio",
        "bind": "/mnt/cache/appdata/factorio/"
      }
    ],
    "env": [
      {
        "name": "PUID",
        "label": "PUID",
        "default": "99"
      },
      {
        "name": "PGID",
        "label": "PGID",
        "default": "100"
      }
    ]
  },  
  {
    "type": 1,
    "title": "FistfulOfFrags",
    "description": "This Docker will download and install SteamCMD. It will also install Fistful of Frags and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Fistful of Frags and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fistfuloffrags.png",
    "name": "FistfulOfFrags",
    "image": "ich777/steamcmd:fistfuloffrags",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/fistfuloffrags"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "fof"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "295230"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 20 +map fof_fistful"
      }
    ]
  },
  {
    "type": 1,
    "title": "FiveM",
    "description": "With this Docker you can run FiveM (GTA V MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the ‘Manual Updates’ (in the 'Show more settings' tab down below) to ‘true’ (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n\r\nUpdate Notice: Simply restart the container and it will download the newest version or if you set ‘Manual Updates’ to ‘true’ place the new fx.tar.xz in the main directory and restart the container.\r\n\r\nConsole: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS FiveM' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "With this Docker you can run FiveM (GTA V MOD SERVER) it will automatically download the latest version or if you want to updated it yourself set the ‘Manual Updates’ (in the 'Show more settings' tab down below) to ‘true’ (without quotes). The Docker will automatically extract it and download all other required files (resources, server.cfg). You can get fx.tar.xz from here: https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/ To run this container you must provide a valid Server Key (you can get them from here: https://keymaster.fivem.net/) and your prefered Server Name.\r\n\r\nUpdate Notice: Simply restart the container and it will download the newest version or if you set ‘Manual Updates’ to ‘true’ place the new fx.tar.xz in the main directory and restart the container.\r\n\r\nConsole: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS FiveM' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/fivem.png",
    "name": "FiveM",
    "image": "ich777/fivemserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "30110": "30110:30110/tcp",
        "30120": "30120:30120/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/fivem"
      }
    ],
    "env": [
      {
        "name": "START_VARS",
        "label": "START_VARS",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": ""
      },
      {
        "name": "SERVER_KEY",
        "label": "SERVER_KEY",
        "default": ""
      },
      {
        "name": "SRV_ADR",
        "label": "SRV_ADR",
        "default": "https://runtime.fivem.net/artifacts/fivem/build_proot_linux/master/"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "",
        "label": "",
        "default": ""
      },
      {
        "name": "GAME_CONFIG",
        "label": "GAME_CONFIG",
        "default": "server.cfg"
      }
    ]
  },
  {
    "type": 1,
    "title": "GarrysMod",
    "description": "This Docker will download and install SteamCMD. It will also install Garry's Mod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Garry's Mod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/garrysmod.png",
    "name": "GarrysMod",
    "image": "ich777/steamcmd:garrysmod",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/garrysmod"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "4020"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "garrysmod"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 12 +map gm_flatgrass"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "HalfLife2DeathMatch",
    "description": "This Docker will download and install SteamCMD. It will also install HalfLife2 DeathMatch and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install HalfLife2 DeathMatch and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete the password edit the file 'server.cfg'.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hl2dm.png",
    "name": "HalfLife2DeathMatch",
    "image": "ich777/steamcmd:hl2dm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/hl2dm"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 16 +map dm_overwatch"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232370"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "hl2mp"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Hurtworld",
    "description": "This Docker will download and install SteamCMD. It will also install Hurtworld and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Hurtworld and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/hurtworld.png",
    "name": "Hurtworld",
    "image": "ich777/steamcmd:hurtworld",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "12871": "12871:12871/udp",
        "12881": "12881:12881/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/hurtworld"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "405100"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "SRV_MAXPLAYERS",
        "label": "SRV_MAXPLAYERS",
        "default": "50"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "12881"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ";autosaveenabled 1;addadmin 76561197963117432"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Hurtworld Docker"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "12871"
      }
    ]
  },
  {
    "type": 1,
    "title": "Insurgency",
    "description": "This Docker will download and install SteamCMD. It will also install Insurgency and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Insurgency and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgency.png",
    "name": "Insurgency",
    "image": "ich777/steamcmd:insurgency",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/insurgency"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "237410"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+map market_coop +maxplayers 6"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "InsurgencySandstorm",
    "description": "This Docker will download and install SteamCMD. It will also install Insurgency Sandstorm and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete it look below at the section GAME_PARAMS.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Insurgency Sandstorm and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nPASSWORD: The initial password is 'Docker', if you want to change or delete it look below at the section GAME_PARAMS.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/insurgencysandstorm.png",
    "name": "InsurgencySandstorm",
    "image": "ich777/steamcmd:insurgencysandstorm",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27102": "27102:27102/udp",
        "27131": "27131:27131/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/insurgencysandstorm"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27102"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27131"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "581330"
      },
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "DockerServer"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "Oilfield?Scenario=Scenario_Refinery_Push_Security?MaxPlayers=28?Password=Docker"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "IW4x-Server",
    "description": "This Docker will download and install a simple IW4x Server.\r\n\r\nATTENTION: You need to copy over the files from your CoD:MW2 folder to the server directory otherwise the server will not start.\r\n\r\nDOWNLOAD NOTICE: If a download fails or is not available you can simply put the .zip files in the server directory and the container will extract the files and start the server.\r\n\r\nWINE NOTICE: Since this container runs with WINE i can't garantee that it will not crash or other weird behavoir.",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install a simple IW4x Server.\r\n\r\nATTENTION: You need to copy over the files from your CoD:MW2 folder to the server directory otherwise the server will not start.\r\n\r\nDOWNLOAD NOTICE: If a download fails or is not available you can simply put the .zip files in the server directory and the container will extract the files and start the server.\r\n\r\nWINE NOTICE: Since this container runs with WINE i can't garantee that it will not crash or other weird behavoir.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/iw4x.png",
    "name": "IW4x-Server",
    "image": "ich777/iw4x-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "28960": "28960:28960/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/iw4x",
        "bind": "/mnt/cache/appdata/iw4x"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+exec server.cfg +sv_maxclients 12 +set fs_game mods/bots +set playlistFilename playlists.info"
      },
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "IW4X_DL_URL",
        "label": "IW4X_DL_URL",
        "default": "https://dss0.cc/updater/iw4x_files.zip"
      },
      {
        "name": "IW4X_DLC_URL",
        "label": "IW4X_DLC_URL",
        "default": "https://iw4x-my.sharepoint.com/:u:/g/personal/emosewaj_iw4x_onmicrosoft_com/EYnWYmCXExpEvn-bL2262Q0BSy0jVZF0FXslvpJEDPE5Fw?e=gPx8RF\u0026download=1"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "28960"
      }
    ]
  },
  {
    "type": 1,
    "title": "KillingFloor",
    "description": "This Docker will download and install SteamCMD. It will also install Killing Floor and run it.\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Killing Floor and run it.\r\n\r\nTo run this container you must provide a valid Steam username and password since the game needs a valid account to download (NOTICE: You must disable Steam Guard otherwise this container will not work, Steam recommens to make a new Steam account for dedicated servers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor.png",
    "name": "KillingFloor",
    "image": "ich777/steamcmd:killingfloor",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20560": "20560:20560/udp",
        "28852": "28852:28852/tcp",
        "7707": "7707:7707/udp",
        "7708": "7708:7708/udp",
        "7717": "7717:7717/udp",
        "8075": "8075:8075/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/killingfloor"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "215360"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "KillingFloor2",
    "description": "This Docker will download and install SteamCMD. It will also install KillingFloor 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install KillingFloor 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/killingfloor2.png",
    "name": "KillingFloor2",
    "image": "ich777/steamcmd:killingfloor2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20560": "20560:20560/udp",
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp",
        "8080": "8080:8080/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/killingfloor2"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232130"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "kf-bioticslab"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Left4Dead",
    "description": "This Docker will download and install SteamCMD. It will also install Left4Dead and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Left4Dead and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d.png",
    "name": "Left4Dead",
    "image": "ich777/steamcmd:l4d",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/l4d"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "222840"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 4 +map l4d_farm04_barn"
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "left4dead"
      }
    ]
  },
  {
    "type": 1,
    "title": "Left4Dead2",
    "description": "This Docker will download and install SteamCMD. It will also install Left4Dead 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Left4Dead 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/l4d2.png",
    "name": "Left4Dead2",
    "image": "ich777/steamcmd:l4d2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/l4d2"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "222860"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "left4dead2"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 8 +map c2m1_highway"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Memories-of-Mars",
    "description": "This Docker will download and install SteamCMD. It will also install Memories of Mars and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nONLINE PLAY: Please be sure to set the variable MULTIHOME to the IP of your Unraid server otherwise you can't connect to the gameserver!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Memories of Mars and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nONLINE PLAY: Please be sure to set the variable MULTIHOME to the IP of your Unraid server otherwise you can't connect to the gameserver!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/memoriesofmars.png",
    "name": "Memories-of-Mars",
    "image": "ich777/steamcmd:memoriesofmars",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "15000": "15000:15000/tcp",
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/memoriesofmars"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "897590"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "MULTIHOME",
        "label": "MULTIHOME",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Mindustry",
    "description": "This is a Basic Mindustry Server. It will download the preferred version of Mindustry and run it.\r\n\r\nUPDATE NOTICE: If you set the GAME_V to 'latest' the container will always check on startup for a new version or you can set it to whatever version you preferr eg: '100', '90',... (without quotes, upgrading and downgrading also possible).\r\n\r\nCONSOLE: To connect to the console open up the terminal for this docker and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Mindustry' (without quotes).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Mindustry Server. It will download the preferred version of Mindustry and run it.\r\n\r\nUPDATE NOTICE: If you set the GAME_V to 'latest' the container will always check on startup for a new version or you can set it to whatever version you preferr eg: '100', '90',... (without quotes, upgrading and downgrading also possible).\r\n\r\nCONSOLE: To connect to the console open up the terminal for this docker and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Mindustry' (without quotes).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mindustry.png",
    "name": "Mindustry",
    "image": "ich777/mindustry-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "6567": "6567:6567/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/mindustry",
        "bind": "/mnt/cache/appdata/mindustry"
      }
    ],
    "env": [
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_V",
        "label": "GAME_V",
        "default": "latest"
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "DockerMindustry"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftBasicServer",
    "description": "This is a Basic Minecraft Server, with the basic configuration it will download and install a Vanilla Minecraft.\r\n\r\nYou can also install a FTB (FeedTheBeast), Bukkit, Spigot,... server.\r\n\r\nStart the container for the first time let it do it's work and shut it down.\r\nAfter that copy over your favorite server executable (don't forget to set the Serverfile name to the same as you copied over) and start the container again.\r\n\r\nUPDATE: If you set the variable GAME_V to 'latest' the container will check on every restart if there is a newer version available (if set to 'latest' the variable JAR_NAME has to be 'server').\n\r\nATTENTION: Don't forget to accept the EULA down below and don't forget to edit the 'server.properties' file the server is by default configured to be a LAN server and to be not snooped.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Minecraft Server, with the basic configuration it will download and install a Vanilla Minecraft.\r\n\r\nYou can also install a FTB (FeedTheBeast), Bukkit, Spigot,... server.\r\n\r\nStart the container for the first time let it do it's work and shut it down.\r\nAfter that copy over your favorite server executable (don't forget to set the Serverfile name to the same as you copied over) and start the container again.\r\n\r\nUPDATE: If you set the variable GAME_V to 'latest' the container will check on every restart if there is a newer version available (if set to 'latest' the variable JAR_NAME has to be 'server').\n\r\nATTENTION: Don't forget to accept the EULA down below and don't forget to edit the 'server.properties' file the server is by default configured to be a LAN server and to be not snooped.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mc.png",
    "name": "MinecraftBasicServer",
    "image": "ich777/minecraftbasicserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "25565": "25565:25565/tcp",
        "25575": "25575:25575/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/minecraft"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_V",
        "label": "GAME_V",
        "default": "latest"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "EXTRA_JVM_PARAMS",
        "label": "EXTRA_JVM_PARAMS",
        "default": ""
      },
      {
        "name": "XMX_SIZE",
        "label": "XMX_SIZE",
        "default": "1024"
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      },
      {
        "name": "JAR_NAME",
        "label": "JAR_NAME",
        "default": "server"
      },
      {
        "name": "XMS_SIZE",
        "label": "XMS_SIZE",
        "default": "1024"
      },
      {
        "name": "ACCEPT_EULA",
        "label": "ACCEPT_EULA",
        "default": "false"
      }
    ]
  },
  {
    "type": 1,
    "title": "MinecraftBedrockEdition",
    "description": "This is a Basic Minecraft Bedrock Edition Server.\r\n\r\nThis container downloads Minecraft Bedrock Edition Server in the specified version or you can also set it to ‘latest’ to download and check on every restart if there is a newer version available.\r\n\r\nUPDATE NOTICE: If you set the GAME_VERSION to ‘latest’ the container will check on every start/restart if there is a newer version available, otherwise enter the preferred version number that you want to install, you also can downgrade your server (no guarantee that it works if you downgrade much versions).\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Minecraft Bedrock Edition Server.\r\n\r\nThis container downloads Minecraft Bedrock Edition Server in the specified version or you can also set it to ‘latest’ to download and check on every restart if there is a newer version available.\r\n\r\nUPDATE NOTICE: If you set the GAME_VERSION to ‘latest’ the container will check on every start/restart if there is a newer version available, otherwise enter the preferred version number that you want to install, you also can downgrade your server (no guarantee that it works if you downgrade much versions).\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u minecraft -ti NAMEOFYOURCONTAINER screen -xS Minecraft' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/bedrock.png",
    "name": "MinecraftBedrockEdition",
    "image": "ich777/minecraftbedrockserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "19132": "19132:19132/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/minecraftbedrockedition"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "latest"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Mordhau",
    "description": "This Docker will download and install SteamCMD. It will also install Mordhau and run it. Initial login SERVERNAME: MordhauDocker SERVERPASSWORD: Docker ADMINPASSWORD adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Mordhau and run it. Initial login SERVERNAME: MordhauDocker SERVERPASSWORD: Docker ADMINPASSWORD adminDocker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mordhau.png",
    "name": "Mordhau",
    "image": "ich777/steamcmd:mordhau",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "15000": "15000:15000/udp",
        "27015": "27015:27015/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/mordhau"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "BEACON_PORT",
        "label": "BEACON_PORT",
        "default": "15000"
      },
      {
        "name": "QUERY_PORT",
        "label": "QUERY_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "7777"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "629800"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "MultiTheftAuto",
    "description": "This Docker will download and install Multi Theft Auto SERVERNAME: Docker MTA Server SERVERPASSWORD: Docker.\r\n\r\nIf you want to connect to the console open a terminal and enter 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS MTA' (without quotes), to disconnect close the window.\r\n\r\nUPDATE NOTICE: You can Force Update this Container (please note that you have to set Download Resources to 'true' and leave Skip Basicconfiguration blank to download everything new).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Multi Theft Auto SERVERNAME: Docker MTA Server SERVERPASSWORD: Docker.\r\n\r\nIf you want to connect to the console open a terminal and enter 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS MTA' (without quotes), to disconnect close the window.\r\n\r\nUPDATE NOTICE: You can Force Update this Container (please note that you have to set Download Resources to 'true' and leave Skip Basicconfiguration blank to download everything new).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/mta.png",
    "name": "MultiTheftAuto",
    "image": "ich777/mtaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "22003": "22003:22003/udp",
        "22005": "22005:22005/tcp",
        "22126": "22126:22126/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/multitheftauto"
      }
    ],
    "env": [
      {
        "name": "LOGFILE_DIR",
        "label": "LOGFILE_DIR",
        "default": "multitheftauto_linux_x64/mods/deathmatch/logs/server.log"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "",
        "label": "",
        "default": ""
      },
      {
        "name": "DOWNLOAD_RESOURCES",
        "label": "DOWNLOAD_RESOURCES",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "NEOTOKYO",
    "description": "This Docker will download and install SteamCMD. It will also install NEOTOKYO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install NEOTOKYO and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/neotokyo.png",
    "name": "NEOTOKYO",
    "image": "ich777/steamcmd:neotokyo",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/neotokyo"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "313600"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 32 +map nt_dawn_ctg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "NeotokyoSource"
      }
    ]
  },
  {
    "type": 1,
    "title": "NeverwinterNights-EE",
    "description": "This Docker will download and install Neverwinter Nights: Enhanced Edition and run it (by default this container has a MariaDB and Redis Server integrated).\r\n\r\nFirst Start: Enter the Module name to load in the variable down below (without the .mod extension) start the container and wait for it until the log displays the message that the modules folder is empty, stop the container and place your mod file in the folder (.../Neverwinter Nights/modules) and restart the container (You can also place a mod file from your local installed game into the server eg.: .../Neverwinter Nights/data/mod/Contest of Champions 0492).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u nwnee -ti NAMEOFYOURCONTAINER screen -xS nwnee' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Neverwinter Nights: Enhanced Edition and run it (by default this container has a MariaDB and Redis Server integrated).\r\n\r\nFirst Start: Enter the Module name to load in the variable down below (without the .mod extension) start the container and wait for it until the log displays the message that the modules folder is empty, stop the container and place your mod file in the folder (.../Neverwinter Nights/modules) and restart the container (You can also place a mod file from your local installed game into the server eg.: .../Neverwinter Nights/data/mod/Contest of Champions 0492).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u nwnee -ti NAMEOFYOURCONTAINER screen -xS nwnee' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/nwnee.png",
    "name": "NeverwinterNights-EE",
    "image": "ich777/nwnee-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5121": "5121:5121/udp"
      }
    ],
    "volumes": [
      {
        "container": "/nwnee",
        "bind": "/mnt/cache/appdata/nwnee"
      }
    ],
    "env": [
      {
        "name": "ELC",
        "label": "ELC",
        "default": "0"
      },
      {
        "name": "ONEPARTY",
        "label": "ONEPARTY",
        "default": "0"
      },
      {
        "name": "DIFF",
        "label": "DIFF",
        "default": "1"
      },
      {
        "name": "AUTO_SAV_I",
        "label": "AUTO_SAV_I",
        "default": "5"
      },
      {
        "name": "SRV_NAME",
        "label": "SRV_NAME",
        "default": "Docker NWNEE"
      },
      {
        "name": "PPW",
        "label": "PPW",
        "default": "Docker"
      },
      {
        "name": "ILR",
        "label": "ILR",
        "default": "0"
      },
      {
        "name": "RLD_W_E",
        "label": "RLD_W_E",
        "default": "0"
      },
      {
        "name": "MOD_NAME",
        "label": "MOD_NAME",
        "default": "Contest Of Champions 0492"
      },
      {
        "name": "MAX_CLIENTS",
        "label": "MAX_CLIENTS",
        "default": "4"
      },
      {
        "name": "MINLEVEL",
        "label": "MINLEVEL",
        "default": "1"
      },
      {
        "name": "MAXLEVEL",
        "label": "MAXLEVEL",
        "default": "40"
      },
      {
        "name": "PVP",
        "label": "PVP",
        "default": "0"
      },
      {
        "name": "SERVERVAULT",
        "label": "SERVERVAULT",
        "default": "0"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "NWNEE_V",
        "label": "NWNEE_V",
        "default": "latest"
      },
      {
        "name": "PAUSEAPLAY",
        "label": "PAUSEAPLAY",
        "default": "0"
      },
      {
        "name": "APWD",
        "label": "APWD",
        "default": "adminDocker"
      },
      {
        "name": "PUBLIC_SRV",
        "label": "PUBLIC_SRV",
        "default": "0"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "LOG_LVL",
        "label": "LOG_LVL",
        "default": "4"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "OpenTTD",
    "description": "This Docker will download and install the version of OpenTTD that you enter in the variable 'Game Version to Install' (if you define 'latest' it will always pull the latest build).\r\n\r\nCONSOLE: If you want to connect to the console open a Terminal and type in 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS OpenTTD' (without quotes). Simply close the windows to disconnect.\r\n\r\nATTENTION: First start and updates can take very long time (Also note: Assigning fewer cores for compiling will result in slower startup on the first start up and updates, RECOMMENDED: leave the 'Compile Cores' blank to use all available cores).\r\n\r\nUpdate Notice: If there is a newer version if set to 'latest' simply restart the container to update it to the latest version. If you want to update from an older build simply set the new build number or set to latest. You can also downgrade to another version.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the version of OpenTTD that you enter in the variable 'Game Version to Install' (if you define 'latest' it will always pull the latest build).\r\n\r\nCONSOLE: If you want to connect to the console open a Terminal and type in 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS OpenTTD' (without quotes). Simply close the windows to disconnect.\r\n\r\nATTENTION: First start and updates can take very long time (Also note: Assigning fewer cores for compiling will result in slower startup on the first start up and updates, RECOMMENDED: leave the 'Compile Cores' blank to use all available cores).\r\n\r\nUpdate Notice: If there is a newer version if set to 'latest' simply restart the container to update it to the latest version. If you want to update from an older build simply set the new build number or set to latest. You can also downgrade to another version.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/openttd.png",
    "name": "OpenTTD",
    "image": "ich777/openttdserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "3979": "3979:3979/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/openttd"
      }
    ],
    "env": [
      {
        "name": "COMPILE_CORES",
        "label": "COMPILE_CORES",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "latest"
      },
      {
        "name": "GFX_PK_V",
        "label": "GFX_PK_V",
        "default": "latest"
      }
    ]
  },
  {
    "type": 1,
    "title": "PavlovVR",
    "description": "This Docker will download and install SteamCMD. It will also install Pavlov VR and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Pavlov VR and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pavlovvr.png",
    "name": "PavlovVR",
    "image": "ich777/steamcmd:pavlovvr",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7000": "7000:7000/udp",
        "7200": "7200:7200/udp",
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/pavlovvr"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "622970"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "PlanetaryAnnihilation",
    "description": "This Docker will download and install Planetary Annihilation.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nThis Docker supports the original version of Planetary Annihilation and the expansion Planetary Annihilation Titans.\r\n\r\nUpdate Notice: Set the Variable 'Update on Start' to 'true' (without quotes) then the docker will check every restart if there is a newer version available otherwise leave it blank.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Planetary Annihilation.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nThis Docker supports the original version of Planetary Annihilation and the expansion Planetary Annihilation Titans.\r\n\r\nUpdate Notice: Set the Variable 'Update on Start' to 'true' (without quotes) then the docker will check every restart if there is a newer version available otherwise leave it blank.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pa.png",
    "name": "PlanetaryAnnihilation",
    "image": "ich777/planetaryannihilationserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "20545": "20545:20545/tcp",
        "8192": "8192:8192/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/planetaryannihilation"
      }
    ],
    "env": [
      {
        "name": "PA_ACC_PWD",
        "label": "PA_ACC_PWD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "20545"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "PA_ACC_NAME",
        "label": "PA_ACC_NAME",
        "default": ""
      },
      {
        "name": "GAME_STREAM",
        "label": "GAME_STREAM",
        "default": "stable"
      },
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "DockerServer"
      },
      {
        "name": "SERVER_PWD",
        "label": "SERVER_PWD",
        "default": "Docker"
      },
      {
        "name": "MAX_PLAYERS",
        "label": "MAX_PLAYERS",
        "default": "12"
      },
      {
        "name": "UPDATE_ON_START",
        "label": "UPDATE_ON_START",
        "default": ""
      },
      {
        "name": "GAME_MODE",
        "label": "GAME_MODE",
        "default": "lobby"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "ProjectZomboid",
    "description": "This Docker will download and install SteamCMD. It will also install Project Zomboid and run it.\r\n\r\nServername: 'Docker ProjectZomboid' Password: 'Docker' AdminPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS PZ' (without quotes), to disconnect from the console simply close the window.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Project Zomboid and run it.\r\n\r\nServername: 'Docker ProjectZomboid' Password: 'Docker' AdminPassword: 'adminDocker'\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS PZ' (without quotes), to disconnect from the console simply close the window.\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/projectzomboid.png",
    "name": "ProjectZomboid",
    "image": "ich777/steamcmd:projectzomboid",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/tcp",
        "16261": "16261:16261/udp",
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/projectzomboid"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "ADMIN_PWD",
        "label": "ADMIN_PWD",
        "default": "adminDocker"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "380870"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "PVK-II",
    "description": "This Docker will download and install SteamCMD. It will also install Pirates, Vikings \u0026amp; Knights 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Pirates, Vikings \u0026amp; Knights 2 and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/pvkii.png",
    "name": "PVK-II",
    "image": "ich777/steamcmd:pvkii",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/pvkii"
      },
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      }
    ],
    "env": [
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "pvkii"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "17575"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-maxplayers 18 +map bt_island"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Quake3",
    "description": "This Docker will download and install Quake III Server (You have to copy your .pk3 files from your game directory to your server).\r\n\r\nPK3 Files: After the container started the first time you have to copy your pak*.pk3 files from your Quake III Arena directory into your server directory: .../.q3a/baseq3/ (i strongly recommend you to place all your pak*.pk3 files into it) after that simply restart the container and it would start the server.\r\n\r\nConfiguring the server: Your server.cfg and maprotationfile.cfg is located into your server directory and .../.q3a/baseq/ (after you successfully started the Quake III Server once).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Quake III Server (You have to copy your .pk3 files from your game directory to your server).\r\n\r\nPK3 Files: After the container started the first time you have to copy your pak*.pk3 files from your Quake III Arena directory into your server directory: .../.q3a/baseq3/ (i strongly recommend you to place all your pak*.pk3 files into it) after that simply restart the container and it would start the server.\r\n\r\nConfiguring the server: Your server.cfg and maprotationfile.cfg is located into your server directory and .../.q3a/baseq/ (after you successfully started the Quake III Server once).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quake3.png",
    "name": "Quake3",
    "image": "ich777/quake3",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "0": "0:0/udp"
      }
    ],
    "volumes": [
      {
        "container": "/quake3",
        "bind": "/mnt/cache/appdata/quake3"
      }
    ],
    "env": [
      {
        "name": "Q3_PORT",
        "label": "Q3_PORT",
        "default": "27960"
      },
      {
        "name": "DL_URL_PR",
        "label": "DL_URL_PR",
        "default": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/linux/linuxq3apoint-1.32b-3.x86.run"
      },
      {
        "name": "DL_URL_PATCH",
        "label": "DL_URL_PATCH",
        "default": "https://ftp.gwdg.de/pub/misc/ftp.idsoftware.com/idstuff/quake3/quake3-1.32c.zip"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+set sv_punkbuster 0 +set fs_game osp +set com_hunkMegs 32"
      },
      {
        "name": "Q3_MAP",
        "label": "Q3_MAP",
        "default": "q3dm1"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "QuakeLive",
    "description": "This Docker will download and install SteamCMD. It will also install Quake Live and run it.\r\nInitial ServerName: 'Quake Live Docker' and Password: 'Docker' (without quotes)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Quake Live and run it.\r\nInitial ServerName: 'Quake Live Docker' and Password: 'Docker' (without quotes)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/quakelive.png",
    "name": "QuakeLive",
    "image": "ich777/steamcmd:quakelive",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27960": "27960:27960/udp",
        "28690": "28690:28690/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/quakelive"
      }
    ],
    "env": [
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27016"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "349090"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "RUST",
    "description": "This Docker will download and install SteamCMD. It will also install RUST and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install RUST and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/rust.png",
    "name": "RUST",
    "image": "ich777/steamcmd:rust",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "28015": "28015:28015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/rust"
      }
    ],
    "env": [
      {
        "name": "SERVER_NAME",
        "label": "SERVER_NAME",
        "default": "RustDockerServer"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "28015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+server.maxplayers 10"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "258550"
      },
      {
        "name": "SERVER_DISCRIPTION",
        "label": "SERVER_DISCRIPTION",
        "default": "Simple Unraid Rust Docker Server"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "SCP-SecretLaboratory",
    "description": "This Docker will download and install SteamCMD. It will also install SCP:Secret Laboratory with MultiAdmin and ServerMod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS SCP' (without quotes), to disconnect from the console simply close the window.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install SCP:Secret Laboratory with MultiAdmin and ServerMod and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!\r\nCONSOLE: To connect to the console open up a terminal and type in: 'docker exec -u steam -ti NAMEOFYOURCONTAINER screen -xS SCP' (without quotes), to disconnect from the console simply close the window.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/scp-secretlaboratory.png",
    "name": "SCP-SecretLaboratory",
    "image": "ich777/steamcmd:scp-secretlaboratory",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/scp-secretlaboratory"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "996560"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Squad",
    "description": "This Docker will download and install SteamCMD. It will also install Squad and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Squad and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/squad.png",
    "name": "Squad",
    "image": "ich777/steamcmd:squad",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21114": "21114:21114/tcp",
        "27165": "27165:27165/udp",
        "27166": "27166:27166/udp",
        "7787": "7787:7787/udp",
        "7788": "7788:7788/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/squad"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "403240"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "Port=7787 QueryPort=27165"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Starbound",
    "description": "This Docker will download and install SteamCMD. It will also install Starbound (Valid Steam useraccount with the game purchased and Steam Guard disabled required) and run it.\r\n\r\nATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!\r\nIf you don't want to disable Steam Guard you can install the Docker as normal, click on it and open a console window and type in: '${STEAMCMD_DIR}/steamcmd.sh +login USERNAME PASSWORD +force_install_dir ${SERVER_DIR} +app_update ${GAME_ID} +quit' (without quotes and replace 'USERNAME' and 'PASSWORD' with your credentials), then enter the Steam Guard key and after the command finishes just restart the Docker.\r\n\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Starbound (Valid Steam useraccount with the game purchased and Steam Guard disabled required) and run it.\r\n\r\nATTENTION: For this Docker you have to specify a valid Steam user with Steam Guard disabled and the game purchased otherwise you will get a no subscription error and the gamefiles won't download!\r\nIf you don't want to disable Steam Guard you can install the Docker as normal, click on it and open a console window and type in: '${STEAMCMD_DIR}/steamcmd.sh +login USERNAME PASSWORD +force_install_dir ${SERVER_DIR} +app_update ${GAME_ID} +quit' (without quotes and replace 'USERNAME' and 'PASSWORD' with your credentials), then enter the Steam Guard key and after the command finishes just restart the Docker.\r\n\r\nFirst Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starbound.png",
    "name": "Starbound",
    "image": "ich777/steamcmd:starbound",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "21025": "21025:21025/tcp",
        "21026": "21026:21026/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/starbound"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "533830"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "StarMade",
    "description": "This container will download and install a StarMade Dedicated Server. It will also install a basic server.cfg at the first startup.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version of StarMade available.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This container will download and install a StarMade Dedicated Server. It will also install a basic server.cfg at the first startup.\r\n\r\nUPDATE: The container will check on every restart if there is a newer version of StarMade available.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/starmade.png",
    "name": "StarMade",
    "image": "ich777/starmade-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "4242": "4242:4242/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/starmade",
        "bind": "/mnt/cache/appdata/starmade"
      }
    ],
    "env": [
      {
        "name": "XMS_SIZE",
        "label": "XMS_SIZE",
        "default": "1024"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "STARTER_PARAMS",
        "label": "STARTER_PARAMS",
        "default": "-nogui"
      },
      {
        "name": "DL_URL",
        "label": "DL_URL",
        "default": "http://files.star-made.org/StarMade-Starter.jar"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "XMX_SIZE",
        "label": "XMX_SIZE",
        "default": "1024"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "RUNTIME_NAME",
        "label": "RUNTIME_NAME",
        "default": "basicjre"
      }
    ]
  },
  {
    "type": 1,
    "title": "Stationeers",
    "description": "This Docker will download and install SteamCMD. It will also install Stationeers and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Stationeers and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stationeers.png",
    "name": "Stationeers",
    "image": "ich777/steamcmd:stationeers",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27500": "27500:27500/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/stationeers"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "600760"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-autosaveinterval=300"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Stun-Turn-Server",
    "description": "This is a Basic STUN \u0026amp; TURN server that was mainly created for Nextcloud Talk.\r\n\r\nIt is fully automated and will create all the necessary files and passwords so that the server can sucessfully start and run.\r\n\r\nPlease read all the discriptions from the Variables carefully and also look at the 'Show more settings' tab.\r\n\r\nATTENTION: Please ignore the socket errors after the server startup if you don't have IPv6 enabled on your server.",
    "categories": [
      "Network:"
    ],
    "platform": "linux",
    "note": "This is a Basic STUN \u0026amp; TURN server that was mainly created for Nextcloud Talk.\r\n\r\nIt is fully automated and will create all the necessary files and passwords so that the server can sucessfully start and run.\r\n\r\nPlease read all the discriptions from the Variables carefully and also look at the 'Show more settings' tab.\r\n\r\nATTENTION: Please ignore the socket errors after the server startup if you don't have IPv6 enabled on your server.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/stun-turn.png",
    "name": "Stun-Turn-Server",
    "image": "ich777/stun-turn-server",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5349": "5349:5349/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/stun-turn",
        "bind": "/mnt/cache/appdata/stun-turn-server"
      }
    ],
    "env": [
      {
        "name": "CERT_LENGTH",
        "label": "CERT_LENGTH",
        "default": "2048"
      },
      {
        "name": "CA_LOCALITY",
        "label": "CA_LOCALITY",
        "default": "None"
      },
      {
        "name": "DH_LENGTH",
        "label": "DH_LENGTH",
        "default": "2048"
      },
      {
        "name": "CLI_PASSWORD",
        "label": "CLI_PASSWORD",
        "default": ""
      },
      {
        "name": "LISTENING_IP",
        "label": "LISTENING_IP",
        "default": "0.0.0.0"
      },
      {
        "name": "PORT",
        "label": "PORT",
        "default": "5349"
      },
      {
        "name": "DISPLAY_SECRETS",
        "label": "DISPLAY_SECRETS",
        "default": "true"
      },
      {
        "name": "PRIVKEY_FILE",
        "label": "PRIVKEY_FILE",
        "default": "privkey.pem"
      },
      {
        "name": "DH_FILE",
        "label": "DH_FILE",
        "default": "dhparam.pem"
      },
      {
        "name": "MAX_BPS",
        "label": "MAX_BPS",
        "default": "0"
      },
      {
        "name": "CA_ORGANIZATION",
        "label": "CA_ORGANIZATION",
        "default": "None"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "REALM",
        "label": "REALM",
        "default": "minenet.at"
      },
      {
        "name": "CERT_FILE",
        "label": "CERT_FILE",
        "default": "cert.pem"
      },
      {
        "name": "CERT_VALID_DAYS",
        "label": "CERT_VALID_DAYS",
        "default": "3650"
      },
      {
        "name": "CA_STATE_PROV",
        "label": "CA_STATE_PROV",
        "default": "None"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "CA_COUNTRY",
        "label": "CA_COUNTRY",
        "default": "US"
      },
      {
        "name": "CIPHER_LIST",
        "label": "CIPHER_LIST",
        "default": "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384"
      },
      {
        "name": "TOTAL_QUOTA",
        "label": "TOTAL_QUOTA",
        "default": "100"
      },
      {
        "name": "SECRET",
        "label": "SECRET",
        "default": ""
      },
      {
        "name": "EXTRA_PARAMS",
        "label": "EXTRA_PARAMS",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "SvenCOOP",
    "description": "This Docker will download and install SteamCMD. It will also install Sven CO-OP and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Sven CO-OP and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/svencoop.png",
    "name": "SvenCOOP",
    "image": "ich777/steamcmd:svencoop",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/svencoop"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "276060"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+maxplayers 20 +map hl_c00.bsp +servercfgfile servers/server.cfg"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamFortress-Classic",
    "description": "This Docker will download and install SteamCMD. It will also install TeamFortress-Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install TeamFortress-Classic and run it.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tfclassic.png",
    "name": "TeamFortress-Classic",
    "image": "ich777/steamcmd:tf",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/tfclassic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "tfc"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-secure +maxplayers 32 +map 2fort"
      },
      {
        "name": "GAME_MOD",
        "label": "GAME_MOD",
        "default": "90 mod tfc"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "90 +app_set_config '90 mod tfc'"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "TeamFortress2",
    "description": "This Docker will download and install TeamFortress2 and run it.\r\n\r\nIt will also install SteamCMD (you can have multiple installations with only one steamcmd directory, check out my other containers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the game server files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install TeamFortress2 and run it.\r\n\r\nIt will also install SteamCMD (you can have multiple installations with only one steamcmd directory, check out my other containers).\r\n\r\nATTENTION: First Startup can take very long since it downloads the game server files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/tf2.png",
    "name": "TeamFortress2",
    "image": "ich777/steamcmd:tf2",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/tf2"
      }
    ],
    "env": [
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "232250"
      },
      {
        "name": "GAME_NAME",
        "label": "GAME_NAME",
        "default": "tf"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "+sv_pure 1 +randommap +maxplayers 24"
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Teeworlds",
    "description": "This Docker will download and install a simple Teeworlds Dedicated server with a autoexec.cfg, dm.cfg, tdm.cfg \u0026amp; ctf.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n\r\nATTENTION: Please don't delete the tar.gz file in the main directory!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available and the container will download and install it.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install a simple Teeworlds Dedicated server with a autoexec.cfg, dm.cfg, tdm.cfg \u0026amp; ctf.cfg preconfigured (the only thing that need to be changed is the Server Name and the RCON Password in the autoexec.cfg).\r\n\r\nATTENTION: Please don't delete the tar.gz file in the main directory!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available and the container will download and install it.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/teeworlds.png",
    "name": "Teeworlds",
    "image": "ich777/teeworldsserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "8303": "8303:8303/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles/",
        "bind": "/mnt/cache/appdata/teeworlds/"
      }
    ],
    "env": [
      {
        "name": "GAME_CONFIG",
        "label": "GAME_CONFIG",
        "default": "dm.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria",
    "description": "This Docker will download and install Terraria and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria.png",
    "name": "Terraria",
    "image": "ich777/terrariaserver",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria-tModloader",
    "description": "This Docker will download and install Terraria and the tModloader and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\n\r\nUpdate Notice: Change the game version to whatever version do you want and restart the container.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and the tModloader and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\n\r\nUpdate Notice: Change the game version to whatever version do you want and restart the container.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tmodloader.png",
    "name": "Terraria-tModloader",
    "image": "ich777/terrariaserver:tmodloader",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria-tmodloader"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Terraria-TShock",
    "description": "This Docker will download and install Terraria and the TShock MOD and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Terraria and the TShock MOD and run it. SERVER PASSWORD: Docker\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files and creates the map!\r\n\r\nUpdate Notice: The Container will check on every start/restart if there is a newer version of the game available and install it if so.\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u terraria -ti NAMEOFYOURCONTAINER screen -xS Terraria' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/terraria-tshock.png",
    "name": "Terraria-TShock",
    "image": "ich777/terrariaserver:tshock",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "7777": "7777:7777/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/terraria-tshock"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-config serverconfig.txt"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "TheForest",
    "description": "This Docker will download and install SteamCMD. It will also install The Forest and run it. SERVERNAME: 'The Forest Docker' SERVERPASSWORD: 'Docker' ADMINPASSWORD: 'adminDocker' (you can change this in your SERVERFOLDER/config/config.cfg)\r\n\r\nBETA Warning: Since this Docker runs with WINE it's marked as BETA, i can not guarantee if the server is running always as expected!\r\n\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (please note that you must generate the token for the APPID: '242760' and every gameserver needs it's own token!!!)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:",
      "Status:Beta"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install The Forest and run it. SERVERNAME: 'The Forest Docker' SERVERPASSWORD: 'Docker' ADMINPASSWORD: 'adminDocker' (you can change this in your SERVERFOLDER/config/config.cfg)\r\n\r\nBETA Warning: Since this Docker runs with WINE it's marked as BETA, i can not guarantee if the server is running always as expected!\r\n\r\nCreate your token here: https://steamcommunity.com/dev/managegameservers (please note that you must generate the token for the APPID: '242760' and every gameserver needs it's own token!!!)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/theforest.png",
    "name": "TheForest",
    "image": "ich777/steamcmd:theforest",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/udp",
        "27016": "27016:27016/udp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/theforest"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "556450"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "TheLounge",
    "description": "TheLonge is the self-hosted web IRC client.\r\nModern features brought to IRC, Always connected, Responsive interface, Synchronized experience\r\nThe Lounge is the official and community-managed fork of Shout, by Mattias Erming.\r\n\r\nMultiple Users: If you want to create a new user simply change the name in the 'Username' variable and also the 'Password' variable, this will have no impact to existing users (the 'Username' variable can't be empty and should always have a username in it that is available on the server).",
    "categories": [
      "Network:Other",
      "Productivity:",
      "Tools:Utilities"
    ],
    "platform": "linux",
    "note": "TheLonge is the self-hosted web IRC client.\r\nModern features brought to IRC, Always connected, Responsive interface, Synchronized experience\r\nThe Lounge is the official and community-managed fork of Shout, by Mattias Erming.\r\n\r\nMultiple Users: If you want to create a new user simply change the name in the 'Username' variable and also the 'Password' variable, this will have no impact to existing users (the 'Username' variable can't be empty and should always have a username in it that is available on the server).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/thelounge.png",
    "name": "TheLounge",
    "image": "ich777/thelounge",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "9000": "9000:9000/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/thelounge",
        "bind": "/mnt/cache/appdata/thelounge"
      }
    ],
    "env": [
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "DATA_PERM",
        "label": "DATA_PERM",
        "default": "770"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "USERPASSWORD",
        "label": "USERPASSWORD",
        "default": ""
      },
      {
        "name": "SAVELOG",
        "label": "SAVELOG",
        "default": "yes"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      }
    ]
  },
  {
    "type": 1,
    "title": "Unturned",
    "description": "This Docker will download and install SteamCMD. It will also install Unturned and run it (if you want to install Rocket Mod set the Variable 'Install Rocket Mod' to 'true' without quotes).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Unturned and run it (if you want to install Rocket Mod set the Variable 'Install Rocket Mod' to 'true' without quotes).\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/unturned.png",
    "name": "Unturned",
    "image": "ich777/steamcmd:unturned",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27015": "27015:27015/tcp",
        "27016": "27016:27016/tcp",
        "27017": "27017:27017/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/unturned"
      }
    ],
    "env": [
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "ROCKET_FORCE_UPDATE",
        "label": "ROCKET_FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "ROCKET_URL",
        "label": "ROCKET_URL",
        "default": "https://ci.rocketmod.net/job/Rocket.Unturned/lastSuccessfulBuild/artifact/Rocket.Unturned/bin/Release/Rocket.zip"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "27015"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "1110390"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-pei -normal -nosync -pve"
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "ROCKET_MOD",
        "label": "ROCKET_MOD",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "Vintage-Story",
    "description": "This is a Basic Vintage Story Server it will download and install Vintage Story Server and run it.\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u vintagestory -ti NAMEOFYOURCONTAINER screen -xS VintageStory' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This is a Basic Vintage Story Server it will download and install Vintage Story Server and run it.\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version available.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u vintagestory -ti NAMEOFYOURCONTAINER screen -xS VintageStory' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/vintagestory.png",
    "name": "Vintage-Story",
    "image": "ich777/vintagestory",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "42420": "42420:42420/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/vintagestory",
        "bind": "/mnt/cache/appdata/vintagestory"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "Windward",
    "description": "This Docker will download and install Windwardand run it.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u windward -ti NAMEOFYOURCONTAINER screen -xS Windward' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Windwardand run it.\r\n\r\nCONSOLE: To connect to the console open up the terminal on the host machine and type in: 'docker exec -u windward -ti NAMEOFYOURCONTAINER screen -xS Windward' (without quotes) to exit the screen session press CTRL+A and then CTRL+D or simply close the terminal window in the first place.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/windward.png",
    "name": "Windward",
    "image": "ich777/windward",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "5127": "5127:5127/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/windward",
        "bind": "/mnt/cache/appdata/windward"
      }
    ],
    "env": [
      {
        "name": "FORCE_UPDATE",
        "label": "FORCE_UPDATE",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-name \"Docker Windward\" -world \"World\" -tcp 5127 -public"
      },
      {
        "name": "ADMIN",
        "label": "ADMIN",
        "default": ""
      }
    ]
  },
  {
    "type": 1,
    "title": "WurmUnlimited",
    "description": "This Docker will download and install SteamCMD. It will also install Wurm Unlimited with or without the Server-ModLauncher and run it.\r\n(You can also copy over the 'Creative' or 'Adventure' folder if you want to create a Server with the provided Servertool that comes with the game)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install SteamCMD. It will also install Wurm Unlimited with or without the Server-ModLauncher and run it.\r\n(You can also copy over the 'Creative' or 'Adventure' folder if you want to create a Server with the provided Servertool that comes with the game)\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: Simply restart the container if a newer version of the game is available.\r\n\r\nYou can also run multiple servers with only one SteamCMD directory!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/wurmunlimited.png",
    "name": "WurmUnlimited",
    "image": "ich777/steamcmd:wurmunlimited",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "27020": "27020:27020/udp",
        "3724": "3724:3724/tcp",
        "8766": "8766:8766/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/steamcmd",
        "bind": "/mnt/user/appdata/steamcmd"
      },
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/wurmunlimited"
      }
    ],
    "env": [
      {
        "name": "VALIDATE",
        "label": "VALIDATE",
        "default": ""
      },
      {
        "name": "MOD_LAUNCHER",
        "label": "MOD_LAUNCHER",
        "default": ""
      },
      {
        "name": "WU_ADMINPWD",
        "label": "WU_ADMINPWD",
        "default": "adminDocker"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "USERNAME",
        "label": "USERNAME",
        "default": ""
      },
      {
        "name": "PASSWRD",
        "label": "PASSWRD",
        "default": ""
      },
      {
        "name": "WU_PWD",
        "label": "WU_PWD",
        "default": "Docker"
      },
      {
        "name": "WU_MAXPLAYERS",
        "label": "WU_MAXPLAYERS",
        "default": "150"
      },
      {
        "name": "GAME_PORT",
        "label": "GAME_PORT",
        "default": "3724"
      },
      {
        "name": "WU_QUERYPORT",
        "label": "WU_QUERYPORT",
        "default": "27020"
      },
      {
        "name": "WU_EPICSERVERS",
        "label": "WU_EPICSERVERS",
        "default": "false"
      },
      {
        "name": "GAME_ID",
        "label": "GAME_ID",
        "default": "402370"
      },
      {
        "name": "WU_SERVERNAME",
        "label": "WU_SERVERNAME",
        "default": "DockerServer"
      },
      {
        "name": "WU_HOMESERVER",
        "label": "WU_HOMESERVER",
        "default": "true"
      },
      {
        "name": "WU_HOMEKINGDOM",
        "label": "WU_HOMEKINGDOM",
        "default": "4"
      },
      {
        "name": "GAME_MODE",
        "label": "GAME_MODE",
        "default": "Creative"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "WU_LOGINSERVER",
        "label": "WU_LOGINSERVER",
        "default": "true"
      }
    ]
  },
  {
    "type": 1,
    "title": "XLink-Kai-Evolution",
    "description": "This Docker will download and install XLink Kai: Evolution.\r\n\r\nXLink Kai: Evolution VII lets you connect with other console users around the world, and play online games for free. XLink Kai: Evo VII tricks your console into thinking that the other users it is connecting to over the Internet, are actually part of a Local Area Network. This is the basis of system-link gaming, where friends would gather around in the same house and play over 2 or more consoles. With XLink Kai: Evo VII, you now have the option to test your skills out with anybody in the world. As for the technical aspects of tunnelling network packets, we won't bore you with that...\r\n\r\nPlease note that you need an XLink Kai: Evolution XTag (XLink Kai Gamertag) you can register it here: https://www.teamxlink.co.uk/?go=register\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of XLink Kai: Evolution and update it.\r\n\r\nATTENTION: This container must be run with the network set to 'Host' mode!\r\nBy default you must open the port 30000 UDP to enable communications with the Orbs to play online.\r\n\r\nPlease also check out the website of XLink Kai Evolution: https://www.teamxlink.co.uk/ huge thanks go to CrunchBite!",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install XLink Kai: Evolution.\r\n\r\nXLink Kai: Evolution VII lets you connect with other console users around the world, and play online games for free. XLink Kai: Evo VII tricks your console into thinking that the other users it is connecting to over the Internet, are actually part of a Local Area Network. This is the basis of system-link gaming, where friends would gather around in the same house and play over 2 or more consoles. With XLink Kai: Evo VII, you now have the option to test your skills out with anybody in the world. As for the technical aspects of tunnelling network packets, we won't bore you with that...\r\n\r\nPlease note that you need an XLink Kai: Evolution XTag (XLink Kai Gamertag) you can register it here: https://www.teamxlink.co.uk/?go=register\r\n\r\nUPDATE NOTICE: The container will check on every start/restart if there is a newer version of XLink Kai: Evolution and update it.\r\n\r\nATTENTION: This container must be run with the network set to 'Host' mode!\r\nBy default you must open the port 30000 UDP to enable communications with the Orbs to play online.\r\n\r\nPlease also check out the website of XLink Kai Evolution: https://www.teamxlink.co.uk/ huge thanks go to CrunchBite!",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/xlinkkai.png",
    "name": "XLink-Kai-Evolution",
    "image": "ich777/xlinkkaievolution",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "volumes": [
      {
        "container": "/xlinkkaievolution",
        "bind": "/mnt/cache/appdata/xlinkkaievolution/"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "000"
      },
      {
        "name": "UDP_PORT",
        "label": "UDP_PORT",
        "default": "30000"
      },
      {
        "name": "INTERFACE_NAME",
        "label": "INTERFACE_NAME",
        "default": "eth0"
      },
      {
        "name": "EXTRA_PARAMS",
        "label": "EXTRA_PARAMS",
        "default": ""
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Xonotic",
    "description": "This Docker will download and install the preferred version of Xonotic.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: If you want to update the game simply change the version number.",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install the preferred version of Xonotic.\r\n\r\nATTENTION: First Startup can take very long since it downloads the gameserver files!\r\n\r\nUpdate Notice: If you want to update the game simply change the version number.",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/xonotic.png",
    "name": "Xonotic",
    "image": "ich777/xonotic",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "26000": "26000:26000/udp"
      }
    ],
    "volumes": [
      {
        "container": "/serverdata/serverfiles",
        "bind": "/mnt/cache/appdata/xonotic"
      }
    ],
    "env": [
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      },
      {
        "name": "BASIC_URL",
        "label": "BASIC_URL",
        "default": "https://dl.xonotic.org/"
      },
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": ""
      },
      {
        "name": "GAME_VERSION",
        "label": "GAME_VERSION",
        "default": "0.8.2"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      }
    ]
  },
  {
    "type": 1,
    "title": "Zandronum",
    "description": "This Docker will download and install Zandronum Server and run it.\r\n\r\nZandronum brings classic Doom into the 21st century, maintaining the essence of what has made Doom great for so many years and, at the same time, adding new features to modernize it, creating a fresh, fun new experience.\r\n\r\nATTENTION: You have to place your wad files into the '/wads' folder to complete the startup of the server (If you place more than one wad file in the folder you have to append the GAME_PARAMS with for example: '-iwad DOOM2.WAD' - without quotes - to load like in this example DOOM2, also note that the wad file is case sensitive).",
    "categories": [
      "GameServers:"
    ],
    "platform": "linux",
    "note": "This Docker will download and install Zandronum Server and run it.\r\n\r\nZandronum brings classic Doom into the 21st century, maintaining the essence of what has made Doom great for so many years and, at the same time, adding new features to modernize it, creating a fresh, fun new experience.\r\n\r\nATTENTION: You have to place your wad files into the '/wads' folder to complete the startup of the server (If you place more than one wad file in the folder you have to append the GAME_PARAMS with for example: '-iwad DOOM2.WAD' - without quotes - to load like in this example DOOM2, also note that the wad file is case sensitive).",
    "logo": "https://raw.githubusercontent.com/ich777/docker-templates/master/ich777/images/zandronum.png",
    "name": "Zandronum",
    "image": "ich777/zandronum",
    "restart_policy": "unless-stopped",
    "network_mode": "bridge",
    "ports": [
      {
        "10666": "10666:10666/udp"
      }
    ],
    "volumes": [
      {
        "container": "/zandronum",
        "bind": "/mnt/cache/appdata/zandronum"
      }
    ],
    "env": [
      {
        "name": "GAME_PARAMS",
        "label": "GAME_PARAMS",
        "default": "-host -exec server.cfg"
      },
      {
        "name": "UID",
        "label": "UID",
        "default": "99"
      },
      {
        "name": "GID",
        "label": "GID",
        "default": "100"
      }
    ]
  },
  {
    "type": 1,
    "title": "coturn",
    "description": "Coturn TURN Server is a VoIP media traffic NAT traversal server and gateway. It can be used as a general-purpose network traffic TURN server and gateway, too.",
    "categories": [
      "Network:Voip"
    ],
    "platform": "linux",
    "note": "Coturn TURN Server is a VoIP media traffic NAT traversal server and gateway. It can be used as a general-purpose network traffic TURN server and gateway, too.",
    "logo": "https://raw.githubusercontent.com/xthursdayx/docker-templates/master/images/webrtc-icon.png",
    "name": "coturn",
    "image": "instrumentisto/coturn",
    "restart_policy": "unless-stopped",
    "network_mode": "host",
    "ports": [
      {
        "0": "0:0/udp",
        "3478": "3478:3478/tcp",
        "5349": "5349:5349/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/etc/ssl/",
        "bind": "/mnt/cache/appdata/coturn/keys"
      },
      {
        "container": "/coturn/turnserver.conf",
        "bind": "/mnt/cache/appdata/coturn/turnserver.conf"
      }
    ]
  },
  {
    "type": 1,
    "title": "quakejs",
    "description": "QuakeJS is a port of ioquake3 to JavaScript with the help of Emscripten.IMPORTANT Use Custom:br0 https://youtu.be/2VnQxxn00jU?t=121 put Fixed IP address, then copy the ip and access it using you broswer",
    "categories": [
      "Other:"
    ],
    "platform": "linux",
    "note": "QuakeJS is a port of ioquake3 to JavaScript with the help of Emscripten.IMPORTANT Use Custom:br0 https://youtu.be/2VnQxxn00jU?t=121 put Fixed IP address, then copy the ip and access it using you broswer",
    "logo": "https://raw.githubusercontent.com/A75G/docker-templates/master/templates/icons/quakejs.png",
    "name": "quakejs",
    "image": "treyyoder/quakejs:latest",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "27960": "27960:27960/tcp"
      }
    ],
    "env": [
      {
        "name": "80",
        "label": "80",
        "default": "80"
      },
      {
        "name": "SERVER",
        "label": "SERVER",
        "default": "192.168.0.266"
      },
      {
        "name": "HTTP_PORT",
        "label": "HTTP_PORT",
        "default": "80"
      }
    ]
  },
  {
    "type": 1,
    "title": "amongusdiscord",
    "description": "Discord Bot to harness Among Us game data, and automatically mute/unmute players during the course of the game!\r\n\r\nWorks in conjunction with amonguscapture\r\n\r\nThis program is in Beta. While we are confident about the basic functionality, there will still be issues or pecularities with how the program functions! We are actively working to resolve these issues!\r\n\r\nHave any questions, concerns, bug reports, or just want to chat? Join the discord at https://discord.gg/ZkqZSWF!\r\n\r\nunRAID template by Argash\r\n\r\nUpdates:\r\n\r\n2020-10-20 - Updated template with new environment variables rework in bot version 2.4.0",
    "categories": [
      "GameServers:",
      "Tools:Utilities",
      "Other:",
      "Network:Voip",
      "Network:Messenger"
    ],
    "platform": "linux",
    "note": "Discord Bot to harness Among Us game data, and automatically mute/unmute players during the course of the game!\r\n\r\nWorks in conjunction with amonguscapture\r\n\r\nThis program is in Beta. While we are confident about the basic functionality, there will still be issues or pecularities with how the program functions! We are actively working to resolve these issues!\r\n\r\nHave any questions, concerns, bug reports, or just want to chat? Join the discord at https://discord.gg/ZkqZSWF!\r\n\r\nunRAID template by Argash\r\n\r\nUpdates:\r\n\r\n2020-10-20 - Updated template with new environment variables rework in bot version 2.4.0",
    "name": "amongusdiscord",
    "image": "denverquane/amongusdiscord",
    "restart_policy": "unless-stopped",
    "ports": [
      {
        "0": "8123:0/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "/mnt/user/appdata/amongusdiscord/"
      },
      {
        "container": "/config/log_path",
        "bind": "/mnt/user/appdata/amongusdiscord/log_path"
      }
    ],
    "env": [
      {
        "name": "DISCORD_BOT_TOKEN",
        "label": "DISCORD_BOT_TOKEN",
        "default": ""
      },
      {
        "name": "HOST",
        "label": "HOST",
        "default": ""
      },
      {
        "name": "DISCORD_BOT_TOKEN_2",
        "label": "DISCORD_BOT_TOKEN_2",
        "default": ""
      },
      {
        "name": "NUM_SHARDS",
        "label": "NUM_SHARDS",
        "default": ""
      }
    ]
  }
]
